var _user$project$Main$routeToString = function (route) {
	var _p0 = route;
	switch (_p0.ctor) {
		case 'HomeRoute':
			return 'home';
		case 'EventRoute':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'Event ',
				_elm_lang$core$Basics$toString(_p0._0));
		case 'EventsRoute':
			return 'list of events';
		default:
			return 'WTF?';
	}
};
var _user$project$Main$viewRoute = function (maybeRoute) {
	var _p1 = maybeRoute;
	if (_p1.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Invalid URL'),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$code,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_user$project$Main$routeToString(_p1._0)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {history: a, route: b, user: c, events: d};
	});
var _user$project$Main$User = F3(
	function (a, b, c) {
		return {id: a, email: b, name: c};
	});
var _user$project$Main$Event = F2(
	function (a, b) {
		return {id: a, name: b};
	});
var _user$project$Main$NotFoundRoute = {ctor: 'NotFoundRoute'};
var _user$project$Main$EventsRoute = {ctor: 'EventsRoute'};
var _user$project$Main$EventRoute = function (a) {
	return {ctor: 'EventRoute', _0: a};
};
var _user$project$Main$HomeRoute = {ctor: 'HomeRoute'};
var _user$project$Main$matchers = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(_evancz$url_parser$UrlParser$map, _user$project$Main$HomeRoute, _evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$Main$EventRoute,
				A2(
					_evancz$url_parser$UrlParser_ops['</>'],
					_evancz$url_parser$UrlParser$s('events'),
					_evancz$url_parser$UrlParser$string)),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$Main$EventsRoute,
					_evancz$url_parser$UrlParser$s('events')),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$initModel = function (location) {
	return A4(
		_user$project$Main$Model,
		{
			ctor: '::',
			_0: A2(_evancz$url_parser$UrlParser$parsePath, _user$project$Main$matchers, location),
			_1: {ctor: '[]'}
		},
		_user$project$Main$HomeRoute,
		A3(_user$project$Main$User, '', '', 'Anonymous'),
		{
			ctor: '::',
			_0: A2(_user$project$Main$Event, '', ''),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		if (_p2.ctor === 'UrlChange') {
			return A2(
				_elm_lang$core$Debug$log,
				_elm_lang$core$Basics$toString(msg),
				{
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							history: {
								ctor: '::',
								_0: A2(_evancz$url_parser$UrlParser$parsePath, _user$project$Main$matchers, _p2._0),
								_1: model.history
							}
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				});
		} else {
			return {
				ctor: '_Tuple2',
				_0: model,
				_1: _elm_lang$navigation$Navigation$newUrl(_p2._0)
			};
		}
	});
var _user$project$Main$NewUrl = function (a) {
	return {ctor: 'NewUrl', _0: a};
};
var _user$project$Main$init = function (location) {
	return A2(
		_user$project$Main$update,
		_user$project$Main$NewUrl(location.pathname),
		_user$project$Main$initModel(location));
};
var _user$project$Main$viewLink = function (url) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Main$NewUrl(url)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(url),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Loccasions'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						_user$project$Main$viewLink,
						{
							ctor: '::',
							_0: '/',
							_1: {
								ctor: '::',
								_0: '/events/',
								_1: {
									ctor: '::',
									_0: '/events/42',
									_1: {ctor: '[]'}
								}
							}
						})),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						{ctor: '[]'},
						A2(_elm_lang$core$List$map, _user$project$Main$viewRoute, model.history)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$UrlChange = function (a) {
	return {ctor: 'UrlChange', _0: a};
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Main$UrlChange,
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p3) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
